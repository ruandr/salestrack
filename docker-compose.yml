version: '3.8'

services:
  app:
    build:
      context: . 
      dockerfile: ./docker/php/Dockerfile 
    container_name: salestrack-app
    working_dir: /var/www
    volumes:
      - ./backend:/var/www 
    networks:
      - salestrack
    depends_on:
      - db
    ports:
      - "8000:8000"

  frontend:
    image: node:20
    container_name: salestrack-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - salestrack

  nginx:
    image: nginx:alpine
    container_name: salestrack-nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www
    depends_on:
      - app
    networks:
      - salestrack

  db:
    image: mysql:8
    container_name: salestrack-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: salestrack
      MYSQL_USER: salestrack
      MYSQL_PASSWORD: salestrack
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - salestrack

  mailhog:
    image: mailhog/mailhog
    container_name: salestrack-mailhog
    ports:
      - "8025:8025"
    networks:
      - salestrack

  cron:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile.cron
    container_name: salestrack-cron
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    networks:
      - salestrack
    depends_on:
      - db
    entrypoint: ["cron", "-f"]

networks:
  salestrack:

volumes:
  dbdata:
